const ENT_URL = 'ENT_URL/'
const CBE_URL = 'CBE_URL/'
const UpLoad= 'UpLoad/'

module.exports = {
   report: {
       listReportTpls: ENT_URL + "simpleReport/listReportTpls",
       describeDayReportData: ENT_URL + "simpleReport/describeDayReportData",
       describeMonthReportData: ENT_URL + "simpleReport/describeMonthReportData",
       describeYearReportData: ENT_URL + "simpleReport/describeYearReportData",
       describeDateRangeReportData: ENT_URL + "simpleReport/describeDateRangeReportData",
       describeReporTpl: ENT_URL + "simpleReport/describeReporTpl",
       deleteReportTpl: ENT_URL + "simpleReport/deleteReportTpl",
       addReportTpl: ENT_URL + "simpleReport/addReportTpl",
       updateReportTpl: ENT_URL + "simpleReport/updateReportTpl",
       listReportIndexType: ENT_URL + "simpleReport/listReportIndexType"
   },
   enterprise: {
       getEnterpriseStructure: ENT_URL + "enterprise/structure/get",
       listAims: ENT_URL + "aim/list",
       deleteAim: ENT_URL + "aim/delete",
       addAim: ENT_URL + "aim/add",
       updateAim: ENT_URL + "aim/update",
       listBms: ENT_URL + "benchmark/list",
       addBm: ENT_URL + "benchmark/add",
       addMultiBms: ENT_URL + "benchmark/multiBms/add",
       deleteBm: ENT_URL + "benchmark/delete",
       updateBm: ENT_URL + "benchmark/update",
       selectSchemeList: ENT_URL + "scheme/list",
       addScheme: ENT_URL + "scheme/add",
       deleteScheme: ENT_URL + "scheme/delete"
   },
   area: {
       listAreaTree: ENT_URL + "area/tree/list",
       listAreaEquipmentTree: ENT_URL + "area/equipmentTree/list"
   },
   equipment: {
       listRangeOperatingRates: ENT_URL + "equipmentStatus/list/rates/range/operating/get",
       listEqStatuses: ENT_URL + "equipmentStatus/list/status/equipment/get",
       listEqParams: ENT_URL + "equipmentStatus/list/params/equipment/get",
       listMeterDatas: ENT_URL + "meterData/list/data/meter/get",
       listMetersByEnergy: ENT_URL + "meterInfo/list/meter/energy/get",
       listDateAlarms: ENT_URL + "alarm/list/date/alarm/get",
       listMonAlarmQuantity: ENT_URL + "alarm/list/month/alarm/get",
       listMeters: ENT_URL + "meterOper/list/meter/get",
       listAlarmCategorys: ENT_URL + "equip/alarm",
       listCloudAlarmRules: ENT_URL + "alarm/list/rule/alarm/get",
       addAlarmRule: ENT_URL + "equip/alarm/rule/alarm/add",
       listAlarms: ENT_URL + "equip/alarm/list/message/alarm/get",
       updateAlarmRule: ENT_URL + "equip/alarm/rule/alarm/update",
       deleteAlarmRule: ENT_URL + "equip/alarm/rule/alarm/delete",
       operateAlarmRule: ENT_URL + "equip/alarm/rule/alarm/operate",
       queryEquipment: ENT_URL + "equip/list/ent/equipment/get",
       listEgQualities: ENT_URL + "meterOper/list/quality/equipment/get",
       listMeterRealtimeDatas: ENT_URL + "meterOper/list/data/meter/current/get",
       listMeterOriginDatas: ENT_URL + "meterOper/list/data/meter/origin/get",
       listAlarmRuleStatus: ENT_URL + "equip/alarm/list/rule/alarm/status/get",
       listMonAlarmAmount: ENT_URL + "equip/alarm/list/amount/alarm/month/get",
       listRuleDatas: ENT_URL + "equip/alarm/list/data/rule/get",
       describeAreaAlarmTree: ENT_URL + "alarm/tree/area/alarm/get",
       listParaDatas: ENT_URL + "meterOper/list/data/para/get",
       listEquipmentTree: ENT_URL + "equipmentFile/list/tree/equipment/get",
       listAllEquipmentTree: ENT_URL + "equipmentFile/tree/equipment/get"
   },
   meterEquiment: {
       getMeterEquipmentParameterDataHistory: ENT_URL + "meterEquipment/history/meter/parameter/equipment/get"
   },
   monitor: {
       listMonitorType: ENT_URL + "monitor/list/type/monitor/get",
       listMonitor: ENT_URL + "monitor/list/value/monitor/get",
       uploadMonitorBgImageAsBase64: ENT_URL + "monitor/image/base64/monitor/upload",
       getMonitorValue: ENT_URL + "monitor/value/monitor/get"
   },
   ball: {
       listBMProductQuality: ENT_URL + "product/bm/quality/list",
       listBMQualityDetailById: ENT_URL + "product/bm/quality/detailById/list",
       listBMProductQualityById: ENT_URL + "product/bm/product/quality/byId/list",
       listBMEffIndex: ENT_URL + "bmEffAnalyze/listBMEffIndex",
       listBMEffDetail: ENT_URL + "bmEffAnalyze/listBMEffDetail",
       listBMFgpIndex: ENT_URL + "bmFgpAnalyze/listBMFgpIndex",
       listBMFgpDetail: ENT_URL + "bmFgpAnalyze/listBMFgpDetail"
   },
   repair: {
       listRepairTask: ENT_URL + "repair/list/task/repair/get",
       listFaultType: ENT_URL + "repair/list/type/fault/repair/get",
       listFaultLevel: ENT_URL + "repair/level/fault/repair/get",
       getRepairTask: ENT_URL + "repair/task/repair/get",
       acceptRepairTask: ENT_URL + "repair/task/repair/accept",
       addRepairTask: ENT_URL + "repair/task/repair/add",
       listRepairSpare: ENT_URL + "repair/list/spare/repair/get",
       updateRepairTask: ENT_URL + "repair/list/task/repair/update",
       updateRepairTaskFaultSolution: ENT_URL + "repair/solution/task/repair/renew",
       deleteRepairTask: ENT_URL + "repair/deleteRepairTask"
   },
   maintain: {
       listMaintainSche: ENT_URL + "maintain/list/schedule/maintain/get",
       updateMaintainScheStatus: ENT_URL + "maintain/status/maintain/update",
       getMaintainSche: ENT_URL + "maintain/schedule/maintain/get",
       getMaintainTask: ENT_URL + "maintain/task/maintain/get",
       listMaintainScheType: ENT_URL + "maintain/list/type/maintain/get",
       getMaintenanceScheEquipment: ENT_URL + "maintain/schedule/maintain/equipment/get",
       listMaintainStandard: ENT_URL + "maintain/list/standard/maintain/get",
       listMaintainTask: ENT_URL + "maintain/list/task/maintain/get",
       updateMaintainTaskResult: ENT_URL + "maintain/result/maintain/update",
       updateMaintainSche: ENT_URL + "maintain/schedule/maintain/update",
       addMaintainSche: ENT_URL + "maintain/schedule/maintain/add",
       deleteMaintainTask: ENT_URL + "maintain/task/maintain/delete",
       deleteMaintainSche: ENT_URL + "maintain/schedule/maintain/delete"
   },
   taskAnalysis: {
       getTaskAnalyzeNumIndex: ENT_URL + "product/task/analyze/num/index/get",
       getTaskAnalyzeNumReasonRate: ENT_URL + "product/task/analyze/num/reasonRate/get",
       listTaskAnalyzeNum: ENT_URL + "product/task/analyze/num/list",
       getTaskAnalyzeTimeFaultPlanRate: ENT_URL + "product/task/analyze/time/faultPlanRate/get",
       getTaskAnalyzeTimeReasonRate: ENT_URL + "product/task/analyze/time/reasonRate/get",
       listTaskAnalyzeTime: ENT_URL + "product/task/analyze/time/list"
   },
   user: {
       listEntUser: ENT_URL + "user/ent/list"
   },
   efficiency: {
       describeAreaFgpDist: ENT_URL + "areaEnergy/describeAreaFgpDist",
       describeAreaElecStat: ENT_URL + "areaEnergy/describeAreaElecStat",
       describeAreaFgpList: ENT_URL + "areaEnergy/describeAreaFgpList",
       listRangeEfcc: ENT_URL + "areaEnergy/listRangeEfcc",
       listStability: ENT_URL + "gov/listStability",
       listUploadDatas: ENT_URL + "gov/listUploadDatas",
       describeBmData: ENT_URL + "areaEnergy/describeBmData",
       listReadingCatalog: ENT_URL + "reading/listReadingCatalog",
       addReadingPlan: ENT_URL + "reading/addReadingPlan",
       listReadingDatas: ENT_URL + "reading/listReadingDatas",
       deleteReadingPlan: ENT_URL + "reading/deleteReadingPlan",
       listReadingPlan: ENT_URL + "reading/listReadingPlan",
       listPhHourDatas: ENT_URL + "prophet/listPhHourDatas",
       listPhEquips: ENT_URL + "prophet/listPhEquips",
       describeJnlInfo: ENT_URL + "jnl/describeJnlInfo",
       listJnls: ENT_URL + "jnl/listJnls",
       listTotalJnls: ENT_URL + "jnl/listTotalJnls",
       describeEgFlow: ENT_URL + "egUs/describeEgFlow",
       listEgLoss: ENT_URL + "egUs/listEgLoss",
       queryBmData: ENT_URL + "areaEnergy/queryBmData"
   },
   product: {
       listOutputs: ENT_URL + "product/listOutputs",
       listCourseOutputs: ENT_URL + "courseOutput/listCourseOutputs",
       addCourseOutput: ENT_URL + "courseOutput/addCourseOutput",
       deleteCourseOutput: ENT_URL + "courseOutput/deleteCourseOutput",
       updateCourseOutput: ENT_URL + "courseOutput/updateCourseOutput",
       listProductGet: ENT_URL + "product/list"
   },
   equipmentFile: {
       addEquipmentFile: ENT_URL + "equipmentFile/file/equipment/add",
       deleteEquipmentFile: ENT_URL + "equipmentFile/file/equipment/delete",
       describeEquipmentFile: ENT_URL + "equipmentFile/file/equipment/get",
       getEquipmentFileQRCode: ENT_URL + "equipmentFile/code/file/equipment/get",
       listEquipmentFiles: ENT_URL + "equipmentFile/list/file/equipment/get",
       listEquipmentUseRecord: ENT_URL + "equipmentFile/list/record/equipment/use/get",
       listSectionTree: ENT_URL + "equipmentFile/list/tree/section/get",
       updateEquipmentFile: ENT_URL + "equipmentFile/file/equipment/update",
       listEquipmentSpares: ENT_URL + "equipmentFile/list/spares/equipment/get"
   },
   commonProp: {
       listCommonProps: ENT_URL + "commonProp/list"
   },
   //请求API
   report: {
       listReportTpls: ENT_URL + "simpleReport/listReportTpls",
       describeDayReportData: ENT_URL + "simpleReport/describeDayReportData",
       describeMonthReportData: ENT_URL + "simpleReport/describeMonthReportData",
       describeYearReportData: ENT_URL + "simpleReport/describeYearReportData",
       describeDateRangeReportData: ENT_URL + "simpleReport/describeDateRangeReportData",
       describeReporTpl: ENT_URL + "simpleReport/describeReporTpl",
       deleteReportTpl: ENT_URL + "simpleReport/deleteReportTpl",
       addReportTpl: ENT_URL + "simpleReport/addReportTpl",
       updateReportTpl: ENT_URL + "simpleReport/updateReportTpl",
       listReportIndexType: ENT_URL + "simpleReport/listReportIndexType",
       listDataset: ENT_URL + "customDatasource/listDataset",
       addReport: ENT_URL + "customReport/addReport",
       describeReport: ENT_URL + "customReport/describeReport",
       listReports: ENT_URL + "customReport/listReports",
       updateReport: ENT_URL + "customReport/updateReport",
       listDatas: ENT_URL + "customDatasource/listDatas",
       deleteReport: ENT_URL + "customReport/deleteReport",
       listReportTemplates: ENT_URL + "customize/listReportTemplates",
       deleteMultiTemplate: ENT_URL + "customize/deleteMultiTemplate",
       deleteTemplate: ENT_URL + "customize/deleteTemplate",
       getReportTemplate: ENT_URL + "customize/getReportTemplate",
       resetName: ENT_URL + "customize/resetName",
       saveReportTemplate: ENT_URL + "customize/saveReportTemplate",
       listRptDataSetInfos: ENT_URL + "customize/listRptDataSetInfos",
       getDataSetColumnList: ENT_URL + "customize/getDataSetColumnList",
       previewReport: ENT_URL + "customize/previewReport",
       getReportInfo: ENT_URL + "customize/getReportInfo",
       downloadCustomReportTemplate: ENT_URL + "customizedReport/downloadCustomReportTemplate",
       uploadCustomizedReportTemplate: UpLoad + "customizedReport/uploadCustomizedReportTemplate",
       listCustomizedReportTemplate: ENT_URL + "customizedReport/listCustomizedReportTemplate",
       deleteCustomizedReportTemplate: ENT_URL + "customizedReport/deleteCustomizedReportTemplate",
       downloadCustomizedReport: ENT_URL + "customizedReport/downloadCustomizedReport",
       updateCustomizedReportTemplate: ENT_URL + "customizedReport/updateCustomizedReportTemplate"
   },
   enterprise: {
       addOrUpdateOutputTarget: ENT_URL + "outputTarget/addOrUpdate",
       deleteOutputTarget: ENT_URL + "outputTarget/delete",
       downOutputTargetTemple: ENT_URL + "outputTarget/temple/down",
       exportOutputTargetTemple: ENT_URL + "outputTarget/temple/export",
       importOutputTargetTemple: UpLoad + "outputTarget/temple/import",
       listOutputTarget: ENT_URL + "outputTarget/list",
       addOrUpdateSalesSend: ENT_URL + "salesSend/addOrUpdate",
       deleteSalesSend: ENT_URL + "salesSend/delete",
       downSalesSendTemple: ENT_URL + "salesSend/temple/down",
       exportSalesSendTemple: ENT_URL + "salesSend/temple/export",
       importSalesSendTemple: UpLoad + "salesSend/temple/import",
       listSalesSend: ENT_URL + "salesSend/salesSend/list",
       getEnterpriseStructure: ENT_URL + "enterprise/structure/get",
       listGroupTags: ENT_URL + "enterprise/groupTag/list",
       listRealGroupTag: ENT_URL + "enterprise/realGroupTag/list",
       listAims: ENT_URL + "aim/list",
       deleteAim: ENT_URL + "aim/delete",
       addAim: ENT_URL + "aim/add",
       updateAim: ENT_URL + "aim/update",
       listBms: ENT_URL + "benchmark/list",
       addBm: ENT_URL + "benchmark/add",
       addMultiBms: ENT_URL + "benchmark/multiBms/add",
       deleteBm: ENT_URL + "benchmark/delete",
       updateBm: ENT_URL + "benchmark/update",
       selectSchemeList: ENT_URL + "scheme/list",
       addSchemes: ENT_URL + "scheme/add",
       updateScheme_new: ENT_URL + "scheme/update",
       deleteSchemes: ENT_URL + "scheme/delete",
       listEntBatch: ENT_URL + "common/entBatch/list",
       listCourse: ENT_URL + "course/list",
       listEntUser: ENT_URL + "user/ent/list",
       listWarehouse: ENT_URL + "common/warehouse/list",
       listMaterial: ENT_URL + "common/material/list",
       listProductionLine: ENT_URL + "common/productionLine/list",
       listAreaTree: ENT_URL + "area/tree/list",
       treeArea: ENT_URL + "area/noWithEquTree/list",
       getAreaEnergys: ENT_URL + "area/areaEnergy/get",
       listAreaEquipmentTree: ENT_URL + "area/equipmentTree/list",
       listBMEquip: ENT_URL + "common/BMEquip/list",
       listMaterialBatch: ENT_URL + "common/materialBatch/list",
       listBatchByMaterial: ENT_URL + "common/material/batch/list",
       deleteCommonProps: ENT_URL + "commonProp/delete",
       saveCommonProps: ENT_URL + "commonProp/save",
       listProduct: ENT_URL + "product/list",
       deleteProduct: ENT_URL + "product/delete",
       saveProduct: ENT_URL + "product/save",
       getProductDetail: ENT_URL + "product/detail/get",
       saveProcedure: ENT_URL + "procedure/section/procedure/save",
       deleteProcedure: ENT_URL + "procedure/section/procedure/delete",
       saveSection: ENT_URL + "procedure/section/section/save",
       deleteSection: ENT_URL + "procedure/section/section/delete",
       listStander: ENT_URL + "stander/list",
       deleteStd: ENT_URL + "stander/delete",
       saveStd: ENT_URL + "stander/save",
       getStanderDetail: ENT_URL + "stander/detail/get",
       deleteStdItem: ENT_URL + "stander/item/delete",
       listFormulaTask: ENT_URL + "areaFormulaScheme/formulaTask/list",
       deleteFormulaTask: ENT_URL + "areaFormulaScheme/formulaTask/delete",
       listAllScheme: ENT_URL + "areaFormulaScheme/",
       listFormulaGroup: ENT_URL + "areaFormulaScheme/formulaGroup/list",
       addFormulaTask: ENT_URL + "areaFormulaScheme/formulaTask/add",
       getFormulaTask: ENT_URL + "areaFormulaScheme/formulaTask/get",
       updateFormulaTask: ENT_URL + "areaFormulaScheme/formulaTask/update",
       listScheme: ENT_URL + "areaFormulaScheme/list",
       getDefaultFormula: ENT_URL + "areaFormulaScheme/defaultFormula/get",
       addScheme: ENT_URL + "areaFormulaScheme/add",
       deleteScheme: ENT_URL + "areaFormulaScheme/delete",
       getScheme: ENT_URL + "areaFormulaScheme/get",
       updateScheme: ENT_URL + "areaFormulaScheme/update",
       getShiftScheduleList: ENT_URL + "course/getShiftScheduleList",
       downShiftScheduleTemplate: ENT_URL + "course/downShiftScheduleTemplate",
       downShiftSchedule: ENT_URL + "course/downShiftSchedule",
       listCourseTree: ENT_URL + "course/courseTree/list",
       deleteCourseGroup: ENT_URL + "course/courseGroup/delete",
       addOrUpdateCourseGroup: ENT_URL + "course/courseGroup/addOrUpdate",
       importShiftSchedule: UpLoad + "course/importShiftSchedule",
       saveShiftSchedule: ENT_URL + "course/saveShiftSchedule",
       deleteShiftSchedule: ENT_URL + "course/deleteShiftSchedule",
       downCapacityTemple: ENT_URL + "productConfig/capacityTemple/down",
       importCapacity: UpLoad + "productConfig/capacity/import",
       getCapacityList: ENT_URL + "productConfig/capacity/list",
       getProductInfo: ENT_URL + "productConfig/productInfo/get",
       saveOrUpdateCapacityItem: ENT_URL + "productConfig/capacityItem/saveOrUpdate",
       deleteCapacityItem: ENT_URL + "productConfig/capacityItem/delete",
       updatePassword: ENT_URL + "user/updatePassword",
       getFormulaProjectList: ENT_URL + "materialFormula/formulaProject/List",
       searchMaterialList: ENT_URL + "materialFormula/material/list",
       saveOrUpdateFormula: ENT_URL + "materialFormula/saveOrUpdate",
       descibeFormulaProject: ENT_URL + "materialFormula/project/formula/describe",
       deleteFormula: ENT_URL + "materialFormula/delete",
       addOrUpdateSupplier: ENT_URL + "supplierConfig/addOrUpdate",
       addOrUpdateSupplierType: ENT_URL + "supplierConfig/supplierType/addOrUpdate",
       deleteSupplier: ENT_URL + "supplierConfig/delete",
       deleteSupplierType: ENT_URL + "supplierConfig/supplierType/delete",
       getSupplier: ENT_URL + "supplierConfig/get",
       listSupplier: ENT_URL + "supplierConfig/list",
       listSupplierType: ENT_URL + "supplierConfig/supplierType/list",
       listSupplierByType: ENT_URL + "supplierConfig/supplierType/list",
       addOrUpdateStandardTemplate: ENT_URL + "checkTemplate/standardTemplate/addOrUpdate",
       addOrUpdateTemplate: ENT_URL + "checkTemplate/template/addOrUpdate",
       deleteStandardTemplate: ENT_URL + "checkTemplate/standardTemplate/delete",
       deleteCheckoutTemplate: ENT_URL + "checkTemplate/template/delete",
       listStandardTemplate: ENT_URL + "checkTemplate/standardTemplate/list",
       listTemplate: ENT_URL + "checkTemplate/template/list",
       getIncomingTemplate: ENT_URL + "checkTemplate/incomingTemplate/get",
       getIncomingTemplateStandard: ENT_URL + "checkTemplate/incomingTemplateStandard/get",
       getProcessTemplate: ENT_URL + "checkProject/processTemplate/get",
       getProcessTemplateByMaterialId: ENT_URL + "checkProject/materialId/processTemplate/get",
       getIncomingTemplateByMaterialId: ENT_URL + "checkTemplate/materialId/incomingTemplate/get",
       listCheckProjectTypeAndProject: ENT_URL + "checkProject/checkProjectTypeAndProject/list",
       saveProcessTemplateData: ENT_URL + "checkProject/processTemplateData/save",
       saveIncomingStandardTemplate: ENT_URL + "checkTemplate/incomingStandardTemplate/save",
       listIncomingResult: ENT_URL + "incomingOrProcessResult/incomingResult/list",
       listMaterialTypeOnCheckingMaterial: ENT_URL + "incomingOrProcessResult/checkingMaterial/materialType/list",
       DeleteIncomingOrProcessResult: ENT_URL + "incomingOrProcessResult/incomingOrProcessList/delete",
       listProcessResult: ENT_URL + "incomingOrProcessResult/processResult/list",
       exportIncomingOrProcessReport: ENT_URL + "incomingOrProcessResult/exportIncomingOrProcessReport",
       exportIncomingOrProcesslist: ENT_URL + "incomingOrProcessResult/incomingOrProcesslist/export",
       listCheckingMaterial: ENT_URL + "materialCheckingConfig/list",
       addOrUpdateCheckingMaterial: ENT_URL + "materialCheckingConfig/addOrUpdate",
       AddIncomingOrProcessCheck: ENT_URL + "incomingOrProcessResult/AddIncomingOrProcessCheck",
       addOrUpdateIncomingCheck: ENT_URL + "incomingOrProcessResult/incomingCheck/addOrUpdate",
       addOrUpdateProcessCheck: ENT_URL + "incomingOrProcessResult/processCheck/addOrUpdate",
       getIncomingResult: ENT_URL + "incomingOrProcessResult/incomingResult/get",
       getProcessResult: ENT_URL + "incomingOrProcessResult/processResult/get",
       IncomingOrProcessCounts: ENT_URL + "incomingOrProcessResult/incomingOrProcess/counts",
       IncomingCountsByMateriel: ENT_URL + "incomingOrProcessResult/materiel/incoming/counts",
       IncomingCountsBySupplier: ENT_URL + "incomingOrProcessResult/supplier/incoming/counts",
       listMaterialTypeOnCheckingMaterialAndAllResp: ENT_URL + "incomingOrProcessResult/checkingMaterialAndAllResp/MaterialType/list",
       listMaterialTree: ENT_URL + "incomingOrProcessResult/material/tree/list",
       ProcessCountsByMateriel: ENT_URL + "incomingOrProcessResult/materiel/process/counts",
       processCountsByArea: ENT_URL + "incomingOrProcessResult/area/process/counts",
       processCountsByCp: ENT_URL + "incomingOrProcessResult/cp/process/counts",
       processCountsBySequence: ENT_URL + "incomingOrProcessResult/sequence/process/counts",
       addBaseProject: ENT_URL + "supplierConfig/baseProject/add",
       addOrUpdateProcessProject: ENT_URL + "templateProject/processProject/addOrUpdate",
       addProjectByCome: ENT_URL + "templateProject/baseProject/add",
       saveProjectSortByCome: ENT_URL + "templateProject/comeProjectSort/save",
       saveProjectSortByProcess: ENT_URL + "templateProject/processProjectSort/save",
       deleteTemplateProcess: ENT_URL + "templateProject/processTemplate/delete",
       getPreviewProcessTemplate: ENT_URL + "checkProject/previewProcessTemplate/get",
       getProcessStandardTemplate: ENT_URL + "checkProject/processStandardTemplate/get",
       addOrUpdateMeasureUnit: ENT_URL + "measureUnit/addOrUpdate",
       addOrUpdateUnitType: ENT_URL + "measureUnit/unitType/addOrUpdate",
       deleteMeasureUnit: ENT_URL + "measureUnit/delete",
       deleteUnitType: ENT_URL + "measureUnit/unitType/delete",
       listMeasureUnit: ENT_URL + "measureUnit/list",
       listUnitType: ENT_URL + "measureUnit/unitType/list",
       addCheckProject: ENT_URL + "checkProject/checkProject/add",
       addCheckProjectType: ENT_URL + "checkProject/checkProjectType/add",
       deleteCheckProject: ENT_URL + "checkProject/checkProject/delete",
       deleteCheckProjectType: ENT_URL + "checkProject/checkProjectType/delete",
       listCheckProject: ENT_URL + "checkProject/checkProject/list",
       listCheckProjectType: ENT_URL + "checkProject/checkProjectType/list",
       getProjectComponent: ENT_URL + "checkProject/projectComponent/get",
       getProjectUnit: ENT_URL + "checkProject/projectUnit/get",
       getMaterialQRCode: ENT_URL + "material/materialQRCode/get",
       listAllArea: ENT_URL + "area/list",
       listMessageCategory: ENT_URL + "message/category/list",
       getCustomizedConfig: ENT_URL + "customizedEnterprise/customizedConfig/get",
       getHomeConfig: ENT_URL + "customizedEnterprise/homeConfig/get",
       listCustomizedMenu: ENT_URL + "customizedEnterprise/customizedMenu/list",
       listDataTarget: ENT_URL + "customizedEnterprise/dataTarget/list",
       updateDataTarget: ENT_URL + "customizedEnterprise/dataTarget/update",
       saveCustomizedMenu: ENT_URL + "customizedEnterprise/customizedMenu/save",
       deleteCustomizedMenu: ENT_URL + "customizedEnterprise/customizedMenu/delete",
       test: ENT_URL + "test/test",
       listPlatformOperationLog: ENT_URL + "operationLog/platformModule/dropdown",
       saveCloudArea: ENT_URL + "area/save",
       updateCloudArea: ENT_URL + "area/update",
       deleteArea: ENT_URL + "area/delete",
       getCloudAreaTemplateURL: ENT_URL + "area/areaTemplate/get",
       importCloudAreaTemplate: UpLoad + "area/areaTemplate/import",
       dropdownPlatformModule: ENT_URL + "operationLog/platformOperationLog/list",
       operationalAction: ENT_URL + "operationLog/action/operational",
       addCloudEntRole: ENT_URL + "role/ent/add",
       updateCloudEntRole: ENT_URL + "role/ent/update",
       listCloudEntRole: ENT_URL + "role/ent/list",
       getAdministratorRoleMenu: ENT_URL + "role/getAdministratorRoleMenu",
       deleteEntRole: ENT_URL + "role/ent/delete",
       saveEntUserRoles: ENT_URL + "role/ent/user/save",
       getEntUserRoleIds: ENT_URL + "role/userId/roleId/list",
       getRoleMenuIds: ENT_URL + "role/role/resourceId/list",
       saveRoleMenuResources: ENT_URL + "role/roleResources/save",
       listCloudUser: ENT_URL + "user/cloud/list",
       resetPassword: ENT_URL + "user/resetPassword",
       updateUser: ENT_URL + "user/update",
       getUser: ENT_URL + "user/get",
       listAppMenus: ENT_URL + "menu/listAppMenus"
   },
   equipment: {
       listRangeOperatingRates: ENT_URL + "equipmentStatus/list/rates/range/operating/get",
       listEqStatuses: ENT_URL + "equipmentStatus/list/status/equipment/get",
       listEqParams: ENT_URL + "equipmentStatus/list/params/equipment/get",
       listMeterDatas: ENT_URL + "meterData/list/data/meter/get",
       listMetersByEnergy: ENT_URL + "meterInfo/list/meter/energy/get",
       listDateAlarms: ENT_URL + "alarm/list/date/alarm/get",
       listMonAlarmQuantity: ENT_URL + "alarm/list/month/alarm/get",
       listMeters: ENT_URL + "meterOper/list/meter/get",
       listEntAlarmCategorys: ENT_URL + "equip/alarm/list/rule/alarm/category/get",
       listCloudAlarmRules: ENT_URL + "alarm/list/rule/alarm/get",
       addAlarmRule: ENT_URL + "equip/alarm/rule/alarm/add",
       listAlarmIndexCategory: ENT_URL + "alarm2/list/category/index/alarm/get",
       listAlarmRule: ENT_URL + "alarm2/list/rule/alarm/get",
       listAlarmTarget: ENT_URL + "alarm2/list/target/alarm/get",
       listAlarmTargetByIndex: ENT_URL + "alarm2/list/target/alarm/index/get",
       listDayAlarmAmount: ENT_URL + "alarm2/list/amount/alarm/month/get",
       listRuleIndexData: ENT_URL + "alarm2/list/data/rule/index/get",
       getDayAreaAlarmAmountTree: ENT_URL + "alarm2/tree/day/alarm/area/get",
       enableOrDisableAlarmRule: ENT_URL + "alarm2/rule/alarm/deal",
       deleteAlarmRuleNew: ENT_URL + "alarm2/rule/alarm/delete",
       listAlarmRecord: ENT_URL + "alarm2/list/record/alarm/get",
       addOrUpdateAlarmRule: ENT_URL + "alarm2/rule/alarm/renew",
       listAlarms: ENT_URL + "equip/alarm/list/message/alarm/get",
       updateAlarmRule: ENT_URL + "equip/alarm/rule/alarm/update",
       deleteAlarmRule: ENT_URL + "equip/alarm/rule/alarm/delete",
       operateAlarmRule: ENT_URL + "equip/alarm/rule/alarm/operate",
       queryEquipment: ENT_URL + "equip/list/ent/equipment/get",
       listEgQualities: ENT_URL + "meterOper/list/quality/equipment/get",
       listMeterRealtimeDatas: ENT_URL + "meterOper/list/data/meter/current/get",
       listMeterOriginDatas: ENT_URL + "meterOper/list/data/meter/origin/get",
       listAlarmRuleStatus: ENT_URL + "equip/alarm/list/rule/alarm/status/get",
       listMonAlarmAmount: ENT_URL + "equip/alarm/list/amount/alarm/month/get",
       listRuleDatas: ENT_URL + "equip/alarm/list/data/rule/get",
       describeAreaAlarmTree: ENT_URL + "alarm/tree/area/alarm/get",
       listParaDatas: ENT_URL + "meterOper/list/data/para/get",
       listEquipmentTree: ENT_URL + "equipmentFile/list/tree/equipment/get",
       listAllEquipmentTree: ENT_URL + "equipmentFile/tree/equipment/get",
       queryEquipAnalysis: ENT_URL + "equip/list/analysis/equipment/get",
       queryEquipTypeByEid: ENT_URL + "equip/list/type/ent/equipment/get",
       listTask: ENT_URL + "taskAnalyze/list/task/get",
       getMonthTaskCount: ENT_URL + "taskAnalyze/count/task/month/get",
       getDayTaskCount: ENT_URL + "taskAnalyze/count/task/day/get",
       getMaintainSche: ENT_URL + "maintain/schedule/maintain/get",
       getMaintainTask: ENT_URL + "maintain/task/maintain/get",
       listMaintainScheType: ENT_URL + "maintain/list/type/maintain/get",
       updateMaintainTaskResult: ENT_URL + "maintain/result/maintain/update",
       listMaintainStandard: ENT_URL + "maintain/list/standard/maintain/get",
       listMaintainTask: ENT_URL + "maintain/list/task/maintain/get",
       getRepairTask: ENT_URL + "repair/task/repair/get",
       updateRepairTaskFaultSolution: UpLoad + "repair/solution/task/repair/renew",
       listRepairSpare: ENT_URL + "repair/list/spare/repair/get",
       listFaultType: ENT_URL + "repair/list/type/fault/repair/get",
       acceptRepairTask: ENT_URL + "repair/task/repair/accept",
       finishRepairTask: ENT_URL + "repair/task/repair/finish",
       acceptMaintainTask: ENT_URL + "maintain/task/maintain/accept",
       finishMaintainTask: ENT_URL + "maintain/task/maintain/finish",
       listEquipFileRQs: ENT_URL + "equipmentFile/list/code/equipment/get",
       updateSectionStatus: ENT_URL + "equipmentFile/status/section/update",
       updateEquipmentStatus: ENT_URL + "equipmentFile/status/equipment/update",
       listAssociationAnalysisParam: ENT_URL + "meterOper/list/param/association/get",
       exportMeterData: ENT_URL + "meterData/list/data/meter/export",
       getMeterEquipmentParameterDataHistory: ENT_URL + "meterEquipment/history/meter/parameter/equipment/get",
       listBallMillRecord: ENT_URL + "ballMillStatistic/list/record/ballMill/get",
       addBallMillRecord: ENT_URL + "ballMillStatistic/record/ballMill/add",
       deleteBallMillRecord: ENT_URL + "ballMillStatistic/record/ballMill/delete",
       updateBallMillRecord: ENT_URL + "ballMillStatistic/record/ballMill/update",
       exportBallMillRecord: ENT_URL + "ballMillStatistic/record/ballMill/export",
       importBallMillRecord: UpLoad + "ballMillStatistic/record/ballMill/import",
       listReadMeterData: ENT_URL + "manualReadMeter/list/data/meter/read/get",
       importSingleReadMeterData: ENT_URL + "manualReadMeter/data/meter/read/single/import",
       deleteReadMeterData: ENT_URL + "manualReadMeter/data/meter/read/delete",
       updateReadMeterData: ENT_URL + "manualReadMeter/data/meter/read/update",
       downloadReadMeterTemplate: ENT_URL + "manualReadMeter/template/meter/read/download",
       listMeterEquipment: ENT_URL + "meterEquipment/list/meter/equipment/ent/get",
       importMultipleReadMeterData: UpLoad + "manualReadMeter/data/meter/read/multiple/import",
       getImportBallMillRecordTemplate: ENT_URL + "ballMillStatistic/template/record/ballMill/get",
       shutdownReason: ENT_URL + "shutdownAnalysis/reason/shutdown/get",
       shutdownStatistics: ENT_URL + "shutdownAnalysis/reason/shutdown/statistics",
       exportShutdownReason: ENT_URL + "shutdownAnalysis/reason/shutdown/export",
       listEqpShutdownReasonRecord: ENT_URL + "eqpShutdownReasonRecord/list/record/eqpShutdown/get",
       saveShutdownReasonRecord: ENT_URL + "eqpShutdownReasonRecord/list/record/eqpShutdown/save",
       describeMtTopo: ENT_URL + "meterOper/message/energy/topology/get",
       listEquipmentAsType: ENT_URL + "equip/list/type/equipment/get",
       getSpareConsumptionStatistics: ENT_URL + "spareConsumptionStatistics/statistics/consumption/spare/get",
       listMeterEquipmentByArea: ENT_URL + "meterEquipment/list/meter/equipment/area/get",
       listWorkSequence: ENT_URL + "spareConsumptionStatistics/list/sequence/work/get",
       listQualityProject: ENT_URL + "spareConsumptionStatistics/list/quality/project/get",
       getProcessQualityAnalysis: ENT_URL + "spareConsumptionStatistics/analysis/process/quality/get",
       checkMaterialStandard: ENT_URL + "spareConsumptionStatistics/standard/material/check",
       addEquipmentModel: ENT_URL + "model/equipment/add",
       deleteEquipmentModel: ENT_URL + "model/equipment/delete",
       queryEquipmentModel: ENT_URL + "model/list/equipment/get",
       updateEquipmentModel: ENT_URL + "model/equipment/update",
       addEquipmentPartModel: ENT_URL + "modelPart/model/part/equipment/add",
       deleteEquipmentModelPart: ENT_URL + "modelPart/model/part/equipment/delete",
       getMaterialTypes: ENT_URL + "modelPart/type/material/equipment/get",
       queryEquipmentModelPart: ENT_URL + "modelPart/list/model/part/equipment/get",
       updateEquipmentPartModel: ENT_URL + "modelPart/model/part/equipment/update",
       queryEquipmentModelPartSpare: ENT_URL + "modelPartSpare/list/model/part/spare/equipment/get",
       deleteEquipmentModelPartSpare: ENT_URL + "modelPartSpare/model/part/spare/equipment/delete",
       addEquipmentModelPartSpare: ENT_URL + "modelPartSpare/model/part/spare/equipment/add",
       sparePartAnalyze: ENT_URL + "modelPartSpare/model/part/spare/equipment/analysis",
       getSparePartList: ENT_URL + "modelPartSpare/list/model/spare/equipment/get",
       listUngroupedTrans: ENT_URL + "meterOper/listUngroupedTrans",
       querySpareByEquipmentIdList: ENT_URL + "modelPartSpare/list/model/part/spare/equipment/id/get",
       saveTransGroup: ENT_URL + "meterOper/group/trans/save",
       deleteTransGroupRelation: ENT_URL + "meterOper/group/trans/relation/delete",
       listTransGroup: ENT_URL + "meterOper/list/group/trans/get",
       listCapacityUsageRatio: ENT_URL + "meterOper/list/capacity/usage/ratio/get",
       deleteTransGroup: ENT_URL + "meterOper/group/trans/delete",
       listEnergyQualityIndex: ENT_URL + "meterOper/list/quality/Index/energy/get",
       listCapacityNedMetrics: ENT_URL + "meterOper/list/capacity/ned/metrics/get",
       shutdownReasonAndArea: ENT_URL + "shutdownAnalysis/reason/shutdown/area/get",
       getMonitorValue: ENT_URL + "monitor/value/monitor/get",
       getEnterpriseEnergyBoard: ENT_URL + "jinTai/board/enterprise/energy/get",
       getEnergyDataByEnterprise: ENT_URL + "jinTai/data/Enterprise/energy/get"
   },
   efficiency: {
       describeAreaFgpDist: ENT_URL + "areaEnergy/describeAreaFgpDist",
       describeAreaElecStat: ENT_URL + "areaEnergy/describeAreaElecStat",
       describeAreaFgpList: ENT_URL + "areaEnergy/describeAreaFgpList",
       listRangeEfcc: ENT_URL + "areaEnergy/listRangeEfcc",
       listRangeEfccV2: ENT_URL + "areaEnergy/listRangeEfccV2",
       listStability: ENT_URL + "gov/listStability",
       listUploadDatas: ENT_URL + "gov/listUploadDatas",
       describeBmData: ENT_URL + "areaEnergy/describeBmData",
       listReadingCatalog: ENT_URL + "reading/listReadingCatalog",
       addReadingPlan: ENT_URL + "reading/addReadingPlan",
       execReadingPlan: ENT_URL + "reading/execReadingPlan",
       listReadingDatas: ENT_URL + "reading/listReadingDatas",
       deleteReadingPlan: ENT_URL + "reading/deleteReadingPlan",
       listReadingPlan: ENT_URL + "reading/listReadingPlan",
       update: ENT_URL + "reading/update",
       listPhHourDatas: ENT_URL + "prophet/listPhHourDatas",
       listPhEquips: ENT_URL + "prophet/listPhEquips",
       describeJnlInfo: ENT_URL + "jnl/describeJnlInfo",
       listJnls: ENT_URL + "jnl/listJnls",
       listTotalJnls: ENT_URL + "jnl/listTotalJnls",
       describeEgFlow: ENT_URL + "egUs/describeEgFlow",
       listEgLoss: ENT_URL + "egUs/listEgLoss",
       queryBmData: ENT_URL + "areaEnergy/queryBmData",
       getBenchMarkData: ENT_URL + "areaEnergy/getBenchMarkData",
       setReadingPlan: ENT_URL + "reading/setReadingPlan",
       listProdEnergy: ENT_URL + "prodEnergy/listProdEnergy",
       listEnergyProphet: ENT_URL + "productionProphet/listEnergyProphet",
       listEnergyShare: ENT_URL + "energy/share/listEnergyShare",
       deletEnergyShare: ENT_URL + "energy/share/deletEnergyShare",
       getEnergyShare: ENT_URL + "energy/share/getEnergyShare",
       saveEnergyShareInfo: ENT_URL + "energy/share/saveEnergyShareInfo",
       listEgGroupLossRates: ENT_URL + "egUs/listEgGroupLossRates",
       getEntEnergyDayProphet: ENT_URL + "productionProphet/getEntEnergyDayProphet",
       exportReadingDatas: ENT_URL + "reading/exportReadingDatas",
       correlationAnalysis: ENT_URL + "dataAnalysis/correlationAnalysis",
       getTrendPlot: ENT_URL + "dataAnalysis/getTrendPlot",
       listVariableCorrelationPlot: ENT_URL + "dataAnalysis/listVariableCorrelationPlot",
       listVariableFrequencies: ENT_URL + "dataAnalysis/listVariableFrequencies",
       clusterAnalyse: ENT_URL + "dataAnalysis/clusterAnalyse",
       listVariableInfo: ENT_URL + "dataAnalysis/listVariableInfo",
       getCommentFacotryEnergyUsage: ENT_URL + "templateData/getCommentFacotryEnergyUsage",
       getCommentTradeIndex: ENT_URL + "templateData/getCommentTradeIndex",
       getCmentAreaView: ENT_URL + "cement/getCmentAreaView",
       getEquipmentPerf: ENT_URL + "cement/getEquipmentPerf",
       listMetrics: ENT_URL + "electricAnalyse/listMetrics",
       listTransMeterics: ENT_URL + "electricAnalyse/listTransMeterics",
       addOrUpdateRawCoalConfig: ENT_URL + "RawCoalConfig/addOrUpdateRawCoalConfig",
       deleteRawCoalConfig: ENT_URL + "RawCoalConfig/deleteRawCoalConfig",
       downloadRawCoalConfig: ENT_URL + "RawCoalConfig/downloadRawCoalConfig",
       getRawCoalConfig: ENT_URL + "RawCoalConfig/getRawCoalConfig",
       importRawCoalConfigTemple: UpLoad + "RawCoalConfig/importRawCoalConfigTemple",
       listRawCoalConfigTemple: ENT_URL + "RawCoalConfig/listRawCoalConfigTemple",
       getExhibitionBoardData: ENT_URL + "exhibition/getExhibitionBoardData",
       saveExhibitionBoardConfig: ENT_URL + "exhibition/saveExhibitionBoardConfig",
       getExhibitionBoardConfigData: ENT_URL + "exhibition/getExhibitionBoardConfigData"
   },
   product: {
       listOutputs: ENT_URL + "product/listOutputs",
       listProductGet: ENT_URL + "product/list",
       listCourseOutputs: ENT_URL + "courseOutput/listCourseOutputs",
       addCourseOutput: ENT_URL + "courseOutput/addCourseOutput",
       deleteCourseOutput: ENT_URL + "courseOutput/deleteCourseOutput",
       updateCourseOutput: ENT_URL + "courseOutput/updateCourseOutput",
       listProdQualityInfos: ENT_URL + "product/quality/info/list",
       listBatch: ENT_URL + "product/quality/batch/list",
       listStandards: ENT_URL + "product/quality/standards/list",
       saveProdQualityInfo: ENT_URL + "product/quality/add",
       ListProductInfos: ENT_URL + "product/list",
       listCourseOpsByCourse: ENT_URL + "product/output/shift/list",
       ListCourseOutputInfos: ENT_URL + "product/output/list",
       listProdGrade: ENT_URL + "product/grade/list",
       listMaterialQuality: ENT_URL + "product/material/quality/list",
       proTaskIndex: ENT_URL + "product/task/batch/index",
       listBatchInfo: ENT_URL + "product/task/batch/finish/list",
       listProTask: ENT_URL + "product/task/batch/list",
       addProTask: ENT_URL + "product/task/batch/add",
       listProductInfos: ENT_URL + "product/list",
       addMaterialQuality: ENT_URL + "product/material/quality/add",
       deleteProTask: ENT_URL + "product/task/batch/delete",
       getProTaskById: ENT_URL + "product/task/batch/get",
       updateProTask: ENT_URL + "product/task/batch/modify",
       getMaterialQualityById: ENT_URL + "product/material/quality/get",
       deleteMaterialQuality: ENT_URL + "product/material/quality/delete",
       getQualityDetail: ENT_URL + "product/quality/get",
       deleteProdQualityInfo: ENT_URL + "product/quality/delete",
       saveCourseBatchOutput: ENT_URL + "product/output/add",
       updateMaterialQuality: ENT_URL + "product/material/quality/modify",
       listBMEquipStatus: ENT_URL + "product/bm/equip/monitor/status/list",
       listBMOperationRecord: ENT_URL + "product/bm/operation/record/list",
       deleteCourseBatchOutput: ENT_URL + "product/output/delete",
       getCourseBatchOutputDetail: ENT_URL + "product/output/get",
       getMaterialCheckItemById: ENT_URL + "product/material/quality/checkItem/get",
       listMaterialCheckScheme: ENT_URL + "product/material/quality/cheme/list",
       updateMaterialCheckResult: ENT_URL + "product/material/quality/checkResult/modify",
       getProductGrade: ENT_URL + "product/grade/get",
       saveProdGrades: ENT_URL + "product/grade/add",
       listSheetAddition: ENT_URL + "product/sheet/addition/scheme/list",
       addOrUpdateSheetAddition: ENT_URL + "product/sheet/addition/scheme/addOrModify",
       deleteSheetAdditionScheme: ENT_URL + "product/sheet/addition/scheme/delete",
       getlistTask: ENT_URL + "product/execution/task/list",
       openTask: ENT_URL + "product/execution/task/open",
       stopTask: ENT_URL + "product/execution/task/stop",
       closeTask: ENT_URL + "product/execution/task/close",
       getSheet: ENT_URL + "product/execution/sheet/get",
       getImportProductTaskTemplateUrl: ENT_URL + "product/task/batch/template/url",
       importProductTask: UpLoad + "product/task/batch/import",
       listShift: ENT_URL + "product/execution/shift/list",
       getlistCourse: ENT_URL + "product/execution/course/list",
       addSheet: ENT_URL + "product/execution/sheet/add",
       getRecord: ENT_URL + "product/execution/record/get",
       listFinishTask: ENT_URL + "product/execution/task/finish/list",
       returnTask: ENT_URL + "product/execution/task/return",
       queryFinishTask: ENT_URL + "product/execution/task/finish/get",
       getImportProductTaskTemplateUrls: ENT_URL + "product/execution/task/template/url/get",
       importFinishTask: UpLoad + "product/execution/task/finish/import",
       listTaskId: ENT_URL + "product/execution/taskId/list",
       listAdditionItem: ENT_URL + "product/execution/additionItem/list",
       listSheetItem: ENT_URL + "product/execution/sheetItem/list",
       listMaterialDistribute: ENT_URL + "product/material/distribute/list",
       saveMaterialDistribute: ENT_URL + "product/material/distribute/add",
       deleteMaterialDistribute: ENT_URL + "product/material/distribute/delete",
       returnQuantity: ENT_URL + "product/material/distribute/return",
       exportFinishTaskDatas: ENT_URL + "product/execution/task/finish/export",
       listProductionArea: ENT_URL + "product/Analysis/area/list",
       queryProductionAnalysis: ENT_URL + "product/Analysis/get"
   },
   equipmentFile: {
       addEquipmentFile: ENT_URL + "equipmentFile/file/equipment/add",
       deleteEquipmentFile: ENT_URL + "equipmentFile/file/equipment/delete",
       describeEquipmentFile: ENT_URL + "equipmentFile/file/equipment/get",
       getEquipmentFileQRCode: ENT_URL + "equipmentFile/code/file/equipment/get",
       listEquipmentFiles: ENT_URL + "equipmentFile/list/file/equipment/get",
       listEquipmentUseRecord: ENT_URL + "equipmentFile/list/record/equipment/use/get",
       listSectionTree: ENT_URL + "equipmentFile/list/tree/section/get",
       updateEquipmentFile: ENT_URL + "equipmentFile/file/equipment/update",
       listEquipmentSpares: ENT_URL + "equipmentFile/list/spares/equipment/get",
       listSectionStatus: ENT_URL + "equipmentFile/list/status/section/get",
       listSectionStatusHistory: ENT_URL + "equipmentFile/list/history/status/section/get",
       deleteSectionStatus: ENT_URL + "equipmentFile/status/section/delete",
       addSectionStatus: ENT_URL + "equipmentFile/status/section/add",
       listEquipmentStatus: ENT_URL + "equipmentFile/list/status/equipment/get",
       listEquipmentStatusHistory: ENT_URL + "equipmentFile/list/history/status/equipment/get",
       addEquipmentStatus: ENT_URL + "equipmentFile/status/equipment/add",
       deleteEquipmentStatus: ENT_URL + "equipmentFile/status/equipment/delete",
       listSpecialEquipmentType: ENT_URL + "equipmentFile/list/type/equipment/special/get",
       addEquipmentSpares: ENT_URL + "equipmentFile/spares/equipment/add",
       deleteEquipmentSpares: ENT_URL + "equipmentFile/spares/equipment/delete",
       equSpareChangeRecord: ENT_URL + "equipmentFile/record/equSpare/change"
   },
   commonProp: {
       listCommonProps: ENT_URL + "commonProp/list"
   },
   courseEffc: {
       getCourseGroupEfficiencyStat: ENT_URL + "courseEffc/getCourseGroupEfficiencyStat",
       listCourseEfficiencies: ENT_URL + "courseEffc/listCourseEfficiencies"
   },
   equipmentEffc: {
       getEquipmentRunningConditionByType: ENT_URL + "equipmentEffc/condition/running/equipment/get",
       listEquipmentRunningConditions: ENT_URL + "equipmentEffc/list/condition/running/equipment/get"
   },
   productEffc: {
       getProductionStatByType: ENT_URL + "product/effc/statByType/get",
       listProductionStats: ENT_URL + "product/effc/stats/list"
   },
   energy: {
       listAllEnergyType: ENT_URL + "energy/type/list",
       listEnergy: ENT_URL + "energy/list",
       listFgpElePricePriceConfig: ENT_URL + "priceConfig/listFgpElePricePriceConfig",
       saveFgpElePricePriceConfig: ENT_URL + "priceConfig/saveFgpElePricePriceConfig"
   },
   meter: {
       listMeterType: ENT_URL + "meter/meterType/list"
   },
   productCost: {
       listProductCost: ENT_URL + "product/cost/list"
   },
   statistics: {
       addTrace: ENT_URL + "statistics/addTrace"
   },
   resource: {
       listUserMenus: ENT_URL + "resources/userId/tree",//获取用户的资源树,即一级和二级菜单【包含推广菜单】
       noWithGeneralizetree: ENT_URL + "resources/userId/noWithGeneralize/tree" //获取用户的资源树,即一级和二级菜单【不包含推广菜单】
      // listEntUserMenus: ENT_URL + "resource/listEntUserMenus"已废弃
   },
   message: {
       addMessage: ENT_URL + "message/add",
       countUnreadMessage: ENT_URL + "message/unreadMessage/count",
       deleteMessage: ENT_URL + "message/delete",
       getMessage: ENT_URL + "message/get",
       listMessage: ENT_URL + "message/list",
       pushMessage: ENT_URL + "message/pushMessage",
       setAllMessageHasRead: ENT_URL + "message/allMessage/hasRead/set",
       setMessageHasRead: ENT_URL + "message/hasRead/set",
       updateMessage: ENT_URL + "message/updateMessage"
   },
   productConfig: {
       listAreaTreeToShfit: ENT_URL + "productConfig/areaTreeToShfit/list",
       getShiftListByEid: ENT_URL + "productConfig/eid/shift/list",
       addShiftInfo: ENT_URL + "productConfig/shiftInfo/add",
       deleteShiftInfo: ENT_URL + "productConfig/shiftInfo/delete",
       recursionAddAreaShift: ENT_URL + "productConfig/recursion/areaShift/add",
       updateShiftInfo: ENT_URL + "productConfig/updateShiftInfo",
       produceCostList: ENT_URL + "product/cost/task/list",
       produceGatherList: ENT_URL + "product/cost/gather/list",
       costRxprot: ENT_URL + "produce/cost/export",
       produceRxprot: ENT_URL + "produce/gather/export"
   },
   productionOrder: {
       addOrUpdateOrder: ENT_URL + "product/order/addOrModify",
       deleteProductionOrder: ENT_URL + "product/order/delete",
       downOrderTemple: ENT_URL + "product/order/temple/down",
       importOrderTemple: UpLoad + "product/order/import",
       listMaterialGrade: ENT_URL + "product/order/material/grade/list",
       listProductionOrder: ENT_URL + "product/order/list",
       listRequireProduct: ENT_URL + "product/order/require/list",
       openOrCloseOrder: ENT_URL + "product/order/openOrClose"
   },
   productionBatch: {
       addOrUpdateBatch: ENT_URL + "product/batch/addOrModify",
       deleteProductionBatch: ENT_URL + "product/batch/delete",
       listProductionBatch: ENT_URL + "product/batch/list",
       openOrCloseBatch: ENT_URL + "product/batch/openOrClose",
       relevanceOrder: ENT_URL + "product/batch/relevance"
   },
   productionTask: {
       addOrUpdateProdTask: ENT_URL + "product/task/addOrModify",
       deleteProductionTask: ENT_URL + "product/task/delete",
       downProdTask: ENT_URL + "product/task/down",
       downProdTaskTemplate: ENT_URL + "product/task/template/down",
       importProdTaskInfo: UpLoad + "product/task/import",
       listProBatchOpen: ENT_URL + "product/task/batch/open/list",
       listProductionTask: ENT_URL + "product/task/list"
   },
   material: {
       getMaterialTypeList: ENT_URL + "material/materialType/list",
       deleteMaterial: ENT_URL + "material/delete",
       saveOrUpdateMaterial: ENT_URL + "material/saveOrUpdate",
       saveOrUpdateMaterialType: ENT_URL + "material/type/saveOrUpdate",
       gradeManage: ENT_URL + "material/grade/manage",
       materialToSheetSchemes: ENT_URL + "material/materialToSheetSchemes",
       deleteMaterialType: ENT_URL + "material/materialType/delete",
       getMaterialListByPage: ENT_URL + "material/page",
       importMaterial: UpLoad + "material/import",
       downMaterialTemple: ENT_URL + "material/temple/down",
       dropdownMaterial: ENT_URL + "material/dropdown"
   },
   rawMaterial: {
       statisticsRawMaterial: ENT_URL + "product/raw/material/statistics",
       listRawMaterial: ENT_URL + "product/raw/material/list",
       exportRawMaterial: ENT_URL + "product/raw/material/export"
   },
   schedule: {
       getShiftScheduleList: ENT_URL + "salesSend/shiftSchedule/list",
       deleteShiftSchedule: ENT_URL + "salesSend/shiftSchedule/delete",
       downShiftScheduleTemplate: ENT_URL + "salesSend/shiftScheduleTemplate/down",
       importShiftSchedule: UpLoad + "salesSend/shiftSchedule/import",
       saveShiftSchedule: ENT_URL + "salesSend/shiftSchedule/save"
   },
   productionAnalysis: {
       listProductionProgress: ENT_URL + "productionAnalysis/listProductionProgress",
       listProductionAnalysis: ENT_URL + "product/Analysis/list"
   },
   equipmentSpare: {
       listSpareStock: ENT_URL + "equipmentSpare/list/stock/spare/get",
       setSafeStock: ENT_URL + "equipmentSpare/stock/safe/set",
       getMaterialByType: ENT_URL + "equipmentSpare/material/type/get",
       listSparePutStorage: ENT_URL + "equipmentSpare/list/storage/spare/get",
       addSparePutStorage: ENT_URL + "equipmentSpare/storage/spare/add",
       downSpareConsume: ENT_URL + "equipmentSpare/consume/spare/download",
       downSparePutTemplate: ENT_URL + "equipmentSpare/template/spare/download",
       importSparePutTemplate: UpLoad + "equipmentSpare/template/spare/import",
       importSpareConsume: UpLoad + "equipmentSpare/consume/spare/import",
       listSpareConsume: ENT_URL + "equipmentSpare/list/consume/spare/get",
       addSpareConsume: ENT_URL + "equipmentSpare/consume/spare/add"
   },
   regularCheck: {
       addRegularCheckCard: ENT_URL + "RegularCheck/card/check/regular/add",
       listRegularCheckCard: ENT_URL + "RegularCheck/list/card/check/regular/get",
       deleteRegularCheckCard: ENT_URL + "RegularCheck/card/check/regular/delete",
       dropdownRegularCheckCard: ENT_URL + "RegularCheck/card/check/regular/dropdown",
       checkCardTemplateUrl: ENT_URL + "RegularCheck/url/template/card/check/regular/get",
       importCheckCard: UpLoad + "RegularCheck/card/check/regular/import",
       addRegularCheckPlan: ENT_URL + "RegularCheck/plan/check/regular/renew",
       listRegularCheckPlan: ENT_URL + "RegularCheck/list/plan/check/regular/get",
       deleteRegularCheckPlan: ENT_URL + "RegularCheck/plan/check/regular/delete",
       openRegularCheckPlan: ENT_URL + "RegularCheck/plan/check/regular/open",
       stopRegularCheckPlan: ENT_URL + "RegularCheck/plan/check/regular/stop",
       getRegularCheckPlan: ENT_URL + "RegularCheck/message/plan/check/regular/get",
       getRegularCheckCard: ENT_URL + "RegularCheck/message/card/check/regular/get",
       checkPlanTemplateUrl: ENT_URL + "RegularCheck/url/template/plan/check/regular/get",
       importCheckPlan: UpLoad + "RegularCheck/plan/check/regular/import",
       deleteRegularCheckRecord: ENT_URL + "RegularCheck/record/check/regular/delete",
       dropdownPlanCycle: ENT_URL + "RegularCheck/cycle/plan/dropdown",
       getRegularCheckRecord: ENT_URL + "RegularCheck/record/check/regular/get",
       listRegularCheckRecord: ENT_URL + "RegularCheck/list/record/check/regular/get"
   },
   fileUpload: {
       upload: UpLoad + "file/upload"
   },
   maintainPlan: {
       addMaintainPlan: ENT_URL + "maintainPlan/plan/maintain/add",
       listMaintainPlan: ENT_URL + "maintainPlan/list/plan/maintain/get",
       getMaintainPlan: ENT_URL + "maintainPlan/plan/maintain/get",
       deleteMaintainPlan: ENT_URL + "maintainPlan/plan/maintain/delete",
       releaseMaintainPlan: ENT_URL + "maintainPlan/plan/maintain/release",
       updateMaintainPlan: ENT_URL + "maintainPlan/plan/maintain/update",
       updateMaintainPlanSpare: ENT_URL + "maintainPlan/plan/maintain/spare/update"
   },
   maintainTask: {
       listMaintainTaskRecordByPage: ENT_URL + "maintainTask/listMaintainTaskRecordByPage"
   },
   repairTask: {
       addOrUpdateRepairTask: ENT_URL + "repairTask/task/repair/renew",
       deleteRepairTask: ENT_URL + "repairTask/task/repair/delete",
       listRepairTaskByPage: ENT_URL + "repairTask/page/task/repair/web/get",
       listRepairRecordByPage: ENT_URL + "repairTask/page/record/task/repair/get",
       finishRepairTask: ENT_URL + "repairTask/task/repair/web/finish",
       ListRepairTaskStatus: ENT_URL + "repairTask/ratio/status/task/repair/get",
       getRepairTaskInfo: ENT_URL + "repairTask/info/task/repair/get"
   },
   repairCourse: {
       listRepairCourse: ENT_URL + "repairCourse/list",
       deleteRepairCourse: ENT_URL + "repairCourse/delete",
       addOrUpdateRepairCourse: ENT_URL + "repairCourse/addOrUpdate"
   },
   shutDownReasonManagement: {
       addEqpShutdownReason: ENT_URL + "eqpShutdownReason/reason/eqpShutdown/add",
       deleteEqpShutdownReason: ENT_URL + "eqpShutdownReason/reason/eqpShutdown/delete",
       getEqpShutdownReason: ENT_URL + "eqpShutdownReason/reason/eqpShutdown/get",
       getImportEqpShutdownReasonTemplate: ENT_URL + "eqpShutdownReason/template/reason/eqpShutdown/import",
       importEqpShutdownReason: UpLoad + "eqpShutdownReason/reason/eqpShutdown/import",
       listEqpShutdownReason: ENT_URL + "eqpShutdownReason/list/reason/eqpShutdown/get",
       updateEqpShutdownReason: ENT_URL + "eqpShutdownReason/reason/eqpShutdown/update",
       addEqpShutdownReasonTree: ENT_URL + "eqpShutdownReasonTree/tree/reason/eqpShutdown/add",
       deleteEqpShutdownReasonTree: ENT_URL + "eqpShutdownReasonTree/tree/reason/eqpShutdown/delete",
       getEqpShutdownReasonTree: ENT_URL + "eqpShutdownReasonTree/tree/reason/eqpShutdown/get",
       listEqpShutdownReasonTree: ENT_URL + "eqpShutdownReasonTree/list/tree/reason/eqpShutdown/get",
       updateEqpShutdownReasonTree: ENT_URL + "eqpShutdownReasonTree/tree/reason/eqpShutdown/update",
       saveEqpShutdownReasonTreeApply: ENT_URL + "eqpShutdownReasonTreeApply/tree/reason/eqpShutdown/area/save",
       listEqpShutdownReasonTreeApply: ENT_URL + "eqpShutdownReasonTreeApply/tree/reason/eqpShutdown/area/get"
   },
   file: {
       upload: UpLoad + "file/upload"
   },
   board: {
       listAreaEnergyBaseline: ENT_URL + "boardSetting/areaEnergyBaseline/list",
       saveAreaEnergyBaseline: ENT_URL + "boardSetting/areaEnergyBaseline/save"
   },
   electricFeesBenConfig: {
       electricFeesBenchmarkConfig: ENT_URL + "ElectricFeesBenchmarkConfig/get",
       addOrUpdateElectricFeesBenchmarkConfig: ENT_URL + "ElectricFeesBenchmarkConfig/addOrUpdate"
   },
   fgpAnalysis: {
       listFgpAnalysisBoard: ENT_URL + "fgpAnalysis/listFgpAnalysisBoard",
       listAllTransAndGroup: ENT_URL + "meterOper/list/analysis/group/trans/get",
       getNeedQuota: ENT_URL + "meterOper/group/trans/capacity/get"
   },
   //获取服务商列表
   orglist: {
       orglist: ENT_URL + 'orgUser/org/list'//查询用户的所在企业信息,用于用户登录后选企业
   },
   //获取是否定制化
   getCustomizedInfo: {
       getCustomizedInfo: CBE_URL + 'customizedEnterprise/getCustomizedInfo'
   }
   
}